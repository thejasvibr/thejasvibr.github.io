<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Thejasvi Beleyur (Posts about Python, coding, writing)</title><link>https://thejasvibr.github.io/</link><description></description><atom:link href="https://thejasvibr.github.io/categories/cat_python-coding-writing.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:thejasvib@gmail.com"&gt;Thejasvi Beleyur&lt;/a&gt; </copyright><lastBuildDate>Thu, 07 May 2020 09:30:01 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>What you *could* do, but you shouldn't</title><link>https://thejasvibr.github.io/blog/error_msgs/</link><dc:creator>Thejasvi Beleyur</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;em&gt;"What gets you into trouble ain't what you don't know, but what you think you do, but ain't so"&lt;/em&gt; - Anon&lt;/p&gt;
&lt;p&gt;This post is about how good software should be like an honest person - who knows their area of competence before taking up a task &lt;em&gt;REPHRASE THISS-- IT'S TOO STRONG&lt;/em&gt;. 
We (myself included) often receive or write code to get things working, and then proceed to keep using it or share it eventually with our lab mates. 
Like anything in the course of life,  use-cases for the software may change. A new project comes up,  or someone (Person X) legitimately decides it'll be cool to try out this new experiment
and process the data with this awesome codebase.  Person X now triumphantly  sits in front of the computer...and waits for the code to  run through with anticipation .... and after a few seconds of anticipation,  out come the plots!!&lt;/p&gt;
&lt;p&gt;Of course, there's a twist to the story in that the results actually seem okay in the beginning, until Person X notices a bunch of weird details. Factor Z, a universal constant, is about 1.5 times more than it should - and this is too much. 
But the diagnostic plots look fine, and the  code ran!! What is happening?? &lt;/p&gt;&lt;p&gt;&lt;a href="https://thejasvibr.github.io/blog/error_msgs/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://thejasvibr.github.io/blog/error_msgs/</guid><pubDate>Sat, 28 Mar 2020 07:20:00 GMT</pubDate></item></channel></rss>
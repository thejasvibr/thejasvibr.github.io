<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Thejasvi Beleyur (Posts about scientific computing)</title><link>https://thejasvibr.github.io/</link><description></description><atom:link href="https://thejasvibr.github.io/categories/cat_scientific-computing.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:thejasvib@gmail.com"&gt;Thejasvi Beleyur&lt;/a&gt; </copyright><lastBuildDate>Sun, 03 May 2020 20:28:07 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Simultaneous code and docs: a safety net for your project</title><link>https://thejasvibr.github.io/blog/working_with_documentation_on_the_go/</link><dc:creator>Thejasvi Beleyur</dc:creator><description>&lt;div&gt;&lt;p&gt;In the past I always used to either badly document my code properly or ignore it completely. The focus was to get the job done and 
to get out. Nowadays, however, things have changed a &lt;em&gt;lot&lt;/em&gt;, and I really only have the &lt;a href="http://www.sphinx-doc.org/en/stable/"&gt;Sphinx&lt;/a&gt; project to blame :P. Documenting
your code as it's being written helps in a bunch of ways, and the person who benefits from it the most is &lt;em&gt;futureyou&lt;/em&gt;. I've thanked 
&lt;em&gt;pastme&lt;/em&gt; a zillion times by now because the current project I'm working on has grown to be a more than a few files, and I was 
quite afraid of not being able to keep track of stuff. However, this time I really decided to write &lt;a href="https://numpydoc.readthedocs.io/en/latest/format.html"&gt;NumPy&lt;/a&gt; style docstrings on all functions that are more than a two lines, and with a little bit of Sphinx magic, and some &lt;a href="https://docs.readthedocs.io/en/stable/"&gt;ReadTheDocs&lt;/a&gt; hosting, the result is a beautiful webpage that  I keep visiting myself just because it's rewarding seeing something nice.&lt;/p&gt;&lt;p&gt;&lt;a href="https://thejasvibr.github.io/blog/working_with_documentation_on_the_go/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://thejasvibr.github.io/blog/working_with_documentation_on_the_go/</guid><pubDate>Sat, 04 Apr 2020 06:20:00 GMT</pubDate></item><item><title>To package or not to package?</title><link>https://thejasvibr.github.io/blog/thought_on_releasing_a_package/</link><dc:creator>Thejasvi Beleyur</dc:creator><description>&lt;div&gt;&lt;p&gt;After having worked in a field for over a few years, and gotten comfortable with programming in the language of your  choice, you slowly begin to realise
that your work essentially always consists of a set of analyses/tasks which are used again and again. For me, experimentally this means, having scripts ready 
that will initiate recordings, playbacks, and saving of audio files for the experiments I do. In terms of simulations, it means writing a lot of code, typically
based on a bunch of acoustics paradigms that are described by a bunch of equations/assumptions. &lt;/p&gt;
&lt;p&gt;I have of course read over and over again, that it's good practise to bundle all of your goodies into one place, and keep them as a package somewhere [REFS].
But why don't I do it yet? Right now, as an end-phase graduate student, I guess it's mainly because  each time I do this task, I'm not sure when I'll actually
have to do it again. The effort of trying to create a common framework and plan all the basic experimenta/computational tasks to be implemented doesn't pay  off. 
Writing a package, I realise  is as much about the single tiny  functions, as it is about the broad common concept and the sufficiently detailed documentation 
aroud it. If  I'm the only  one who's  going to use  it,  and am not even sure when - it's not worth the time :P. &lt;/p&gt;&lt;p&gt;&lt;a href="https://thejasvibr.github.io/blog/thought_on_releasing_a_package/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://thejasvibr.github.io/blog/thought_on_releasing_a_package/</guid><pubDate>Wed, 01 Apr 2020 06:30:00 GMT</pubDate></item></channel></rss>